{"version":3,"sources":["Resume.js","App.js","serviceWorker.js","index.js","images/profileicon.svg"],"names":["Resume","props","fetch","then","response","json","data","console","log","info","profile","location","id","basics","name","className","style","backgroundColor","class","src","logo1","alt","width","role","href","phone","color","email","textAlign","career","Education","qualification","course","university","passingyear","SkillsandInterest","s1","s2","s3","s4","projects","p1","p2","personal","DOB","age","Gender","Mother","Father","Place_of_Birth","Home","profiles","map","values","index","key","to","pathname","App","exact","path","component","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.0ad9ce60.chunk.js","sourcesContent":["import React from 'react';\nimport data from './data.json';\nimport logo1 from './images/profileicon.svg';\n\nexport default function Resume(props) {\n        fetch('https://jsonplaceholder.typicode.com/posts')\n                .then(response=>response.json())\n                .then(data=>console.log(data))\n\n        let info=data.profile[props.location.data.id]\n        console.log(info.basics.name)\n    return (\n        <div className=\"row justify-content-center\" style={{backgroundColor:\"black\"}}>\n            {/*profiledata/ left part */}\n            <div className=\"col-lg-3 m-2\" >\n                <div className=\"card shadow\" style={{backgroundColor:\"#A9A9A9\"}}>\n                    <div class=\"card-body text-center\">\n                    <div>\n                    <img src={logo1} alt=\"profileicon\" style={{width:\"30%\"}}/>\n                    <h2>{info.basics.name}</h2>\n                     <h4 className=\"text-secondary\">{info.basics.role}</h4>\n    <a href={\"tel:\"+info.basics.phone}><h4 style={{color:\"white\"}}>{info.basics.phone}</h4></a>\n                 <a href={\"mailto::\"+info.basics.email}><h4 style={{color:\"white\"}}>{info.basics.email}</h4></a>\n                    </div>  \n                    </div> \n                </div>\n                \n            </div>\n            {/*profiledata/ right part */}\n            <div className=\"col-lg-8 m-2\"  >\n                <div className=\"card shadow\" style={{backgroundColor:\"#A9A9A9\"}} >\n                    <div class=\"card body\" style={{backgroundColor:\"#A9A9A9\"}}>\n                    <h2 style={{textAlign:\"center\"}}>Resume</h2>\n                    <h4>Career Objective:</h4>\n                    <hr />\n                    <p>{info.career}</p>\n                    <h4>Education:</h4>\n                    <hr />\n                    <ul>\n                        <li>{\"Qualification:\"+info.Education.qualification}</li>\n                        <li>{\"Course:\"+info.Education.course}</li>\n                        <li>{\"University:\"+info.Education.university}</li>\n                        <li>{\"PassingYear:\"+info.Education.passingyear}</li>\n                    </ul>\n                    <h4>Skills And Interest</h4>\n                    <hr />\n                    <ol>\n                        <li>{info.SkillsandInterest.s1}</li>\n                        <li>{info.SkillsandInterest.s2}</li>\n                        <li>{info.SkillsandInterest.s3}</li>\n                        <li>{info.SkillsandInterest.s4}</li>\n                    </ol>\n                    <h4>Projects</h4>\n                    <hr />\n                    <p>{\"*\"+info.projects.p1}</p>\n                    <p>{\"*\"+info.projects.p2}</p>\n                    <h4>Personal Information</h4>\n                    <hr />\n                    <ul>\n                        <li>{\"DateofBirth:\"+info.personal.DOB}</li>\n                        <li>{\"Age:\"+info.personal.age}</li>\n                        <li>{\"Gender:\"+info.personal.Gender}</li>\n                        <li>{\"Mother:\"+info.personal.Mother}</li>\n                        <li>{\"Father:\"+info.personal.Father}</li>\n                        <li>{\"Place_of_Birth:\"+info.personal.Place_of_Birth}</li>\n                    </ul>\n                    </div>\n                </div>\n               \n\n               \n            </div>\n        </div>\n    )\n}\n\n\n\n","import React from 'react';\n\nimport './App.css';\nimport data from './data.json';\nimport logo1 from './images/profileicon.svg';\nimport {HashRouter,Route,Link} from 'react-router-dom';\nimport Resume from './Resume.js';\n\n\nfunction App(){\n\n  return(\n   <HashRouter>\n    <Route exact path='/' component={Home}/>\n    <Route exact path='/resume' component={Resume}/> \n   </HashRouter>\n  );\n  }\n\n  //Home\n\n  let Home=() =>{\n      let profiles=data.profile;\n      console.log(profiles);\n\n      return(\n        <container>\n        <div className=\"row\" >\n          {profiles.map((values,index)=>(\n            <div className=\"col-lg-4 col-md-4 col-sm-10 mt-1\" key={index}>\n          <div className=\"card\" style={{backgroundColor:\"#A9A9A9\"}}>\n              <div className=\"card-body text-center\">\n                <img src={logo1} alt=\"profileicon\" style={{width:\"30%\"}}/>\n                <h2>{values.basics.name}</h2>\n                <h4 className=\"text-secondary\">{values.basics.role}</h4>\n          <a href={\"tel:\"+values.basics.phone}><h4 style={{color:\"white\"}}>{values.basics.phone}</h4></a>\n                <a href={\"mailto::\"+values.basics.email}><h4 style={{color:\"white\"}}>{values.basics.email}</h4></a>\n                <Link to={{pathname:'/resume' ,data:{id:index}}} className=\"btn btn-primary\">View Profile</Link>\n              </div>\n          </div>\n          </div> \n          )\n          )}\n        </div>\n        </container>\n\n      )\n  }\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/profileicon.6f88fc6b.svg\";"],"sourceRoot":""}